create:
  summary: create a channel
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Create a channel
  consumes:
    - application/json
  requestBody:
    description: >
      Information of channel to be created
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            displayName:
              type: string
            type:
              type: string
              enum:
                - standard
            metadata:
              type: object
            tags:
              type: array
              items:
                type: string
            userIds:
              type: array
              items:
                type: string
            avatarFileId:
              type: string
          required:
            - channelId
            - type
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelAndUserApiResponse"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenAvatarError"
    "400301":
       $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

query:
  summary: query channels
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Query channels
  consumes:
    - application/json
  requestBody:
    description: >
      Query parameters
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            filter:
              type: string
              enum:
                - all
                - member
                - notMember
            types:
              type: array
              items:
                type: string
                enum:
                  - standard
                  - private
                  - conversation
                  - broadcast
                  - live
                  - community
            tags:
              type: array
              items:
                type: string
            excludeTags:
              type: array
              items:
                type: string
            userId:
              type: string
            options:
              type: object
              properties:
                skip:
                  type: integer
                limit:
                  type: integer
                token:
                  type: string
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelPaginationApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

setChannelDisplay:
  summary: change channel displayName
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Change a channel's displayName
  parameters:
    - name: channelId
      in: path
      required: true
      schema:
        type: string
  consumes:
    - application/json
  requestBody:
    description: >
      Information of channel to be changed
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            displayName:
              type: string
          required:
            - displayName
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

ban:
  summary: ban users in channel
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Ban users in channel
  parameters:
    - name: channelId
      in: path
      required: true
      schema:
        type: string
  consumes:
    - application/json
  requestBody:
    description: >
      channelId and userIds
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 50
          required:
            - userIds
  responses:
    "200000":
      description: OK
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

unban:
  summary: unban users in channel
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Unban users in channel
  parameters:
    - name: channelId
      in: path
      required: true
      schema:
        type: string
  consumes:
    - application/json
  requestBody:
    description: >
      channelId and userIds
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 50
          required:
            - userIds
  responses:
    "200000":
      description: OK
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400316":
      $ref: "../../global/error.yaml#/UserIsUnbannedError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

close:
  summary: close channel
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Close channel
  parameters:
    - name: channelId
      in: path
      required: true
      schema:
        type: string
  consumes:
    - application/json
  responses:
    "200000":
      description: OK
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

setAvatar:
  summary: Set or Remove avatar from channel
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Set or Remove avatar from channel.
    Put null inside avatarFileId to remove avatar.
  parameters:
    - name: channelId
      in: path
      required: true
      schema:
        type: string
  consumes:
    - application/json
  requestBody:
    description: >
      Information of channel to be created
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            avatarFileId:
              type: string
          required:
            - avatarFileId
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelApiResponse"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenAvatarError"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/FileNotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

muteChannel:
  summary: Mute all users in channel for a specific period of time.
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Mute all users in channel for a specific period of time.
  parameters:
    - name: channelId
      in: path
      required: true
      schema:
        type: string
  consumes:
    - application/json
  requestBody:
    description: >
      Information of channel to be muted and period
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            mutePeriod:
              type: number
              description: mute period (milliseconds)
          required:
            - mutePeriod
  responses:
    "200000":
      $ref: "./response.yaml#/MuteApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

muteUserInChannel:
  summary: Mute a user in channel for a specific period of time.
  tags:
    - Channel
  security:
    - BearerAuth: []
  description: >
    Mute a user in channel for a specific period of time.
  parameters:
    - name: channelId
      in: path
      required: true
      schema:
        type: string
  consumes:
    - application/json
  requestBody:
    description: >
      Information of channel to be muted and period
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              items:
                type: string
                maxLength: 50
              maxItems: 100
            mutePeriod:
              type: number
              description: mute period (milliseconds)
          required:
            - userIds
            - mutePeriod
  responses:
    "200000":
      $ref: "./response.yaml#/MuteApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"


Channels:
  post:
    summary: 'query channels'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Query channels\n"
    consumes:
      - 'application/json'
    requestBody:
      description: "Query parameters\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              filter:
                type: 'string'
                enum:
                  - 'all'
                  - 'member'
                  - 'notMember'
              types:
                type: 'array'
                items:
                  type: 'string'
                  enum:
                    - 'standard'
                    - 'private'
                    - 'conversation'
                    - 'broadcast'
                    - 'live'
                    - 'community'
              tags:
                type: 'array'
                items:
                  type: 'string'
              excludeTags:
                type: 'array'
                items:
                  type: 'string'
              userId:
                type: 'string'
              options:
                type: 'object'
                properties:
                  skip:
                    type: 'integer'
                  limit:
                    type: 'integer'
                  token:
                    type: 'string'
    responses:
      '200000':
        $ref: './response.yaml#/ChannelPaginationApiResponse'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


Channel:
  post:
    summary: 'create a channel'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Create a channel\n"
    consumes:
      - 'application/json'
    requestBody:
      description: "Information of channel to be created\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              channelId:
                type: 'string'
              displayName:
                type: 'string'
              type:
                type: 'string'
                enum:
                  - 'standard'
              metadata:
                type: 'object'
              tags:
                type: 'array'
                items:
                  type: 'string'
              userIds:
                type: 'array'
                items:
                  type: 'string'
              avatarFileId:
                type: 'string'
            required:
              - 'channelId'
              - 'type'
    responses:
      '200000':
        $ref: './response.yaml#/ChannelAndUserApiResponse'
      '400300':
        $ref: '../../global/error.yaml#/ForbiddenAvatarError'
      '400301':
        $ref: '../../global/error.yaml#/PermissionDenidedError'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '400400':
        $ref: '../../global/error.yaml#/NotFoundError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


ChannelChannelIdDisplayName:
  post:
    summary: 'change channel displayName'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Change a channel's displayName\n"
    parameters:
      - name: 'channelId'
        in: 'path'
        required: true
        schema:
          type: 'string'
    consumes:
      - 'application/json'
    requestBody:
      description: "Information of channel to be changed\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              displayName:
                type: 'string'
            required:
              - 'displayName'
    responses:
      '200000':
        $ref: './response.yaml#/ChannelApiResponse'
      '400301':
        $ref: '../../global/error.yaml#/PermissionDenidedError'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


ChannelChannelIdUsersBan:
  post:
    summary: 'ban users in channel'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Ban users in channel\n"
    parameters:
      - name: 'channelId'
        in: 'path'
        required: true
        schema:
          type: 'string'
    consumes:
      - 'application/json'
    requestBody:
      description: "channelId and userIds\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              userIds:
                type: 'array'
                minItems: 1
                maxItems: 100
                items:
                  type: 'string'
                  minLength: 1
                  maxLength: 50
            required:
              - 'userIds'
    responses:
      '200000':
        description: 'OK'
      '400301':
        $ref: '../../global/error.yaml#/PermissionDenidedError'
      '400304':
        $ref: '../../global/error.yaml#/UserIsBannedError'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '400400':
        $ref: '../../global/error.yaml#/NotFoundError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


ChannelChannelIdUsersUnban:
  post:
    summary: 'unban users in channel'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Unban users in channel\n"
    parameters:
      - name: 'channelId'
        in: 'path'
        required: true
        schema:
          type: 'string'
    consumes:
      - 'application/json'
    requestBody:
      description: "channelId and userIds\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              userIds:
                type: 'array'
                minItems: 1
                maxItems: 100
                items:
                  type: 'string'
                  minLength: 1
                  maxLength: 50
            required:
              - 'userIds'
    responses:
      '200000':
        description: 'OK'
      '400301':
        $ref: '../../global/error.yaml#/PermissionDenidedError'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '400316':
        $ref: '../../global/error.yaml#/UserIsUnbannedError'
      '400400':
        $ref: '../../global/error.yaml#/NotFoundError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


ChannelsChannelIdClose:
  post:
    summary: 'close channel'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Close channel\n"
    parameters:
      - name: 'channelId'
        in: 'path'
        required: true
        schema:
          type: 'string'
    consumes:
      - 'application/json'
    responses:
      '200000':
        description: 'OK'
      '400301':
        $ref: '../../global/error.yaml#/PermissionDenidedError'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


ChannelChannelIdAvatar:
  put:
    summary: 'Set or Remove avatar from channel'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Set or Remove avatar from channel. Put null inside avatarFileId to remove avatar.\n"
    parameters:
      - name: 'channelId'
        in: 'path'
        required: true
        schema:
          type: 'string'
    consumes:
      - 'application/json'
    requestBody:
      description: "Information of channel to be created\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              avatarFileId:
                type: 'string'
            required:
              - 'avatarFileId'
    responses:
      '200000':
        $ref: './response.yaml#/ChannelApiResponse'
      '400300':
        $ref: '../../global/error.yaml#/ForbiddenAvatarError'
      '400301':
        $ref: '../../global/error.yaml#/PermissionDenidedError'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '400400':
        $ref: '../../global/error.yaml#/FileNotFoundError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


ChannelChannelIdMute:
  put:
    summary: 'Mute all users in channel for a specific period of time.'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Mute all users in channel for a specific period of time.\n"
    parameters:
      - name: 'channelId'
        in: 'path'
        required: true
        schema:
          type: 'string'
    consumes:
      - 'application/json'
    requestBody:
      description: "Information of channel to be muted and period\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              mutePeriod:
                type: 'number'
                description: 'mute period (milliseconds)'
            required:
              - 'mutePeriod'
    responses:
      '200000':
        $ref: './response.yaml#/MuteApiResponse'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '400400':
        $ref: '../../global/error.yaml#/NotFoundError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'


ChannelChannelIdUsersMute:
  put:
    summary: 'Mute a user in channel for a specific period of time.'
    tags:
      - 'Channel'
    security:
      - BearerAuth: []
    description: "Mute a user in channel for a specific period of time.\n"
    parameters:
      - name: 'channelId'
        in: 'path'
        required: true
        schema:
          type: 'string'
    consumes:
      - 'application/json'
    requestBody:
      description: "Information of channel to be muted and period\n"
      required: true
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              userIds:
                type: 'array'
                items:
                  type: 'string'
                  maxLength: 50
                maxItems: 100
              mutePeriod:
                type: 'number'
                description: 'mute period (milliseconds)'
            required:
              - 'userIds'
              - 'mutePeriod'
    responses:
      '200000':
        $ref: './response.yaml#/MuteApiResponse'
      '400311':
        $ref: '../../global/error.yaml#/RateLimitError'
      '400400':
        $ref: '../../global/error.yaml#/NotFoundError'
      '500000':
        $ref: '../../global/error.yaml#/UnexpectedError'
