addRole:
  summary: add user role in channel
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    Add user role in channel
  requestBody:
    description: >
      channelId, role and userIds
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            role:
              type: string
            userIds:
              type: array
              items:
                type: string
          required:
            - channelId
            - userIds
            - role
  
  responses:
    "200000":
      description: OK
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

removeRole:
  summary: remove user role in channel
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    Remove user role in channel
  requestBody:
    description: >
      channelId, role and userIds
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            role:
              type: string
            userIds:
              type: array
              items:
                type: string
          required:
            - channelId
            - userIds
            - role
  
  responses:
    "200000":
      description: OK
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

create:
  summary: create a channel
  tags:
    - Channel
  securityDefinition:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  description: >
    Create a channel
  parameters:
    - name: Authorization
      in: header
      value: Bearer {{accessToken}}
      required: true
      schema:
        type: string
    - name: Content-Type
      in: header
      value: application/x-www-form-urlencoded
      required: true
      schema:
        type: string
  consumes:
    - application/x-www-form-urlencoded
  requestBody:
    description: >
      Information of channel to be created
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            displayName:
              type: string
            type:
              type: string
              enum:
                - standard
                - private
            metadata:
              type: object
            tags:
              type: array
              items:
                type: string
            userIds:
              type: array
              items:
                type: string
            avatarFileId:
              type: string
          required:
            - channelId
            - type
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelAndUserSocketResponse"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenAvatarError"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/FileNotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

createConversation:
  summary: create a conversation channel
  tags:
    - Channel
  securityDefinition:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  description: >
    Create a conversation channel
  parameters:
    - name: Authorization
      in: header
      value: Bearer {{accessToken}}
      required: true
      schema:
        type: string
    - name: Content-Type
      in: header
      value: application/x-www-form-urlencoded
      required: true
      schema:
        type: string
  consumes:
    - application/x-www-form-urlencoded
  requestBody:
    description: >
      Information of channel to be created
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            displayName:
              type: string
            metadata:
              type: object
            tags:
              type: array
              items:
                type: string
            userId:
              type: string
          required:
            - userId
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelAndUserSocketResponse"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

query:
  summary: query channel
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    Query channels
  requestBody:
    description: >
      Query parameters
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            filter:
              type: string
              enum:
                - all
                - member
                - notMember
            tags:
              type: array
              items:
                type: string
            excludeTags:
              type: array
              items:
                type: string
            types:
              type: array
              items:
                type: string
                enum:
                  - standard
                  - private
                  - conversation
                  - broadcast
            options:
              type: object
              properties:
                skip:
                  type: integer
                limit:
                  type: integer
                token:
                  type: string
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelPaginationSocketResponse"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"
    "400311":
      $ref: "../../global/error.yaml#RateLimitError"

queryUsers:
  summary: query channel users
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    Query channel users
  requestBody:
    description: >
      Query parameters
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            role:
              type: string
            filter:
              type: string
              enum:
                - all
                - muted
                - banned
              default: all
            options:
              type: object
              properties:
                skip:
                  type: integer
                limit:
                  type: integer
                token:
                  type: string
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelUserPaginationSocketResponse"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"

setAvatar:
  summary: Set or Remove avatar from channel
  tags:
    - Channel
  securityDefinition:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  description: >
    Set or Remove avatar from channel.
    Put null inside avatarFileId to remove avatar.
  parameters:
    - name: Authorization
      in: header
      value: Bearer {{accessToken}}
      required: true
      schema:
        type: string
    - name: Content-Type
      in: header
      value: application/x-www-form-urlencoded
      required: true
      schema:
        type: string
  consumes:
    - application/x-www-form-urlencoded
  requestBody:
    description: >
      Information of channel to be created
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            avatarFileId:
              type: string
          required:
            - channelId
            - avatarFileId
  responses:
    "200000":
      $ref: "./response.yaml#/ChannelSocketResponse"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenAvatarError"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400400":
      $ref: "../../global/error.yaml#/FileNotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

ban:
  summary: ban users in channel
  tags:
    - Channel
  securityDefinition:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  description: >
    Ban users in channel
  parameters:
    - name: Authorization
      in: header
      value: Bearer {{accessToken}}
      required: true
      schema:
        type: string
    - name: Content-Type
      in: header
      value: application/x-www-form-urlencoded
      required: true
      schema:
        type: string
  consumes:
    - application/x-www-form-urlencoded
  requestBody:
    description: >
      channelId and userIds
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            userIds:
              type: array
              items:
                type: string
          required:
            - channelId
            - userIds
  responses:
    "200000":
      description: OK
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

unban:
  summary: unban users in channel
  tags:
    - Channel
  securityDefinition:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  description: >
    Unban users in channel
  parameters:
    - name: Authorization
      in: header
      value: Bearer {{accessToken}}
      required: true
      schema:
        type: string
    - name: Content-Type
      in: header
      value: application/x-www-form-urlencoded
      required: true
      schema:
        type: string
  consumes:
    - application/x-www-form-urlencoded
  requestBody:
    description: >
      channelId and userIds
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            userIds:
              type: array
              items:
                type: string
          required:
            - channelId
            - userIds
  responses:
    "200000":
      description: OK
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400316":
      $ref: "../../global/error.yaml#/UserIsUnbannedError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

markSeen:
  summary: mark user message read position inside channel
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    Mark user message read position inside channel
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            readToSegment:
              type: number
          required:
            - channelId
            - readToSegment
  responses:
    "200000":
      description: OK
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

startReading:
  summary: User start reading message inside channel
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    User start reading message inside channel
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
          required:
            - channelId
  responses:
    "200000":
      description: OK
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

stopReading:
  summary: User stop reading message inside channel
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    User stop reading message inside channel
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
          required:
            - channelId
  responses:
    "200000":
      description: OK
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

startReadings:
  summary: Unknown
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    Mark start reading in multiple channel ???
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelIds:
              type: array
              items: 
                type: string
          required:
            - channelIds
  responses:
    "200000":
      $ref: "./response.yaml#/CustomResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

stopReadings:
  summary: Unknown
  tags:
    - Channel
  security:
    - SocketAuth: []
  description: >
    Mark stop reading in multiple channel ???
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelIds:
              type: array
              items: 
                type: string
          required:
            - channelIds
  responses:
    "200000":
      $ref: "./response.yaml#/CustomResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"