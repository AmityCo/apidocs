update:
  summary: Update user information.
  tags:
    - User
  security:
    - SocketAuth: []
  description: >
    Update user information such as displayName, roles and metadata
  requestBody:
    description: >
      User information to be updated
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userId:
              type: string
              maxLength: 50
            displayName:
              type: string
              maxLength: 100
            roles:
              type: array
              maxItems: 10
              items:
                type: string
                maxLength: 100
            metadata:
              type: object
              maxLength: 500
  responses:
    "200000":
      $ref: "./response.yaml#/UserSocketResponse"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

query:
  summary: query users
  tags:
    - User
  security:
    - SocketAuth: []
  description: >
    Query users
  requestBody:
    description: >
      Query parameters
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            search:
              type: string
            sortBy:
              type: string
              enum:
                - lastCreated
                - firstCreated
                - displayName
              default: displayName
            options:
              type: object
              properties:
                limit:
                  type: integer
                  minimum: 1
                  maximum: 100
                  default: 10
                token:
                  type: string
  responses:
    "200000":
      $ref: "./response.yaml#/UsersPaginationSocketResponse"
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

get:
  summary: get users informations base on given userIds
  tags:
    - User
  security:
    - SocketAuth: []
  description: >
    Get users informations
  requestBody:
    description: request userIds
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              items:
                type: string
          required:
            - userIds
  responses:
    "200000":
      $ref: "./response.yaml#/UsersSocketResponse"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"

flag:
  summary: Flag a user.
  tags:
    - User
  security:
    - SocketAuth: []
  description: >
    Flag a user. If a user who flag already flagged target user, flag count will not increase
  requestBody:
    description: >
      userId to be flagged
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userId:
              type: string
          required:
            - userId
  responses:
    "200000":
      $ref: "./response.yaml#/UserSocketResponse"
    "400300":
      $ref: "../../global/error.yaml#/NumberOfFlagExceedError"
    "400400":
      $ref: "../../global/error.yaml#/UserNotFoundError"

unflag:
  summary: Unflag a user.
  tags:
    - User
  security:
    - SocketAuth: []
  description: >
    unFlag a user.
  requestBody:
    description: >
      userId to be flagged
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userId:
              type: string
          required:
            - userId
  responses:
    "200000":
      $ref: "./response.yaml#/UserSocketResponse"
    "400400":
      $ref: "../../global/error.yaml#/UserNotFoundError"

isFlagByMe:
  summary: Check whether user flag a given user.
  tags:
    - User
  security:
    - SocketAuth: []
  description: >
    Check whether a user flag a given user.
  requestBody:
    description: >
      userId to be flagged
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userId:
              type: string
          required:
            - userId
  responses:
    "200000":
      $ref: "../../global/response.yaml#/IsFlagByMeResponse"
    "400400":
      $ref: "../../global/error.yaml#/UserNotFoundError"
