create:
  summary: create a message in a given channel
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Create a message in a given channel.
  requestBody:
    description: >
      information of a message to be created.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageId:
              type: string
            channelId:
              type: string
            type:
              type: string
            data:
              type: object
            tags:
              type: array
              items:
                type: string
            parentId:
              type: string
          required:
            - channelId
            - type
            - data
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
    "400400":
      $ref: "../../global/error.yaml#/ChannelNotFoundError"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400302":
      $ref: "../../global/error.yaml#/UserIsMutedError"
    "400303":
      $ref: "../../global/error.yaml#/ChannelIsMutedError"
    "400307":
      $ref: "../../global/error.yaml#/MaxRepetitionExceed"
    "400308":
      $ref: "../../global/error.yaml#/BanWordFoundError"
    "400309":
      $ref: "../../global/error.yaml#/LinkNotAllowedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"
update:
  summary: update a message information (only creator)
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Update a message. Now we support updating tags & content by creator only.
  requestBody:
    description: >
      information of a message to be updated.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageId:
              type: string
            data:
              type: object
            tags:
              type: array
              items:
                type: string
          required:
            - messageId
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"
updateData:
  summary: update a message data (only creator)
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Update a message data (only creator).
  requestBody:
    description: >
      information of a message data.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageId:
              type: string
            data:
              type: object
          required:
            - messageId
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"
updateTag:
  summary: update a message tag by anyone
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Update a message tag by anyone.
  requestBody:
    description: >
      information of a message tags.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageId:
              type: string
            tags:
              type: array
              items:
                type: string
          required:
            - messageId
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"
flag:
  summary: Flag a message.
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Flag a message. If a user already flagged the message, flag count will not increase
  requestBody:
    description: >
      messageId to be flagged
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageId:
              type: string
          required:
            - messageId
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
    "400300":
      $ref: "../../global/error.yaml#/NumberOfFlagExceedError"
    "400400":
      $ref: "../../global/error.yaml#/MessageNotFoundError"
get:
  summary: Get messages.
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Get messages by ids.
  requestBody:
    description: >
      condition for get
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageIds:
              type: array
              description: List of message ids.
              items:
                type: string
          required:
            - messageIds
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
unflag:
  summary: Unflag a message
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    unflag a message.
  requestBody:
    description: >
      messageId to be flagged
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageId:
              type: string
          required:
            - messageId
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
    "400400":
      $ref: "../../global/error.yaml#/MessageNotFoundError"
query:
  summary: Query messages.
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Query messages by a given condition.
  requestBody:
    description: >
      condition for querying
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            channelId:
              type: string
            parentId:
              type: string
            filterByParentId:
              type: boolean
            tags:
              type: array
              description: List of including tags. They will be used for searching.
              items:
                type: string
            excludeTags:
              type: array
              description: List of excluding tags. They will be used for searching.
              items:
                type: string
            options:
              type: object
              properties:
                after:
                  type: number
                first:
                  type: number
                before:
                  type: number
                last:
                  type: number
                token:
                  type: string
          required:
            - channelId
  responses:
    "200000":
      $ref: "../../v2/message/response.yaml#/MessageResponse"
isFlagByMe:
  summary: Check whether user flag a given message.
  tags:
    - Message
  security:
    - SocketAuth: []
  description: >
    Check whether user flag a given message.
  requestBody:
    description: >
      messageId to be flagged
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            messageId:
              type: string
          required:
            - messageId
  responses:
    "200000":
      $ref: "../../global/response.yaml#/IsFlagByMeResponse"
    "400400":
      $ref: "../../global/error.yaml#/MessageNotFoundError" 