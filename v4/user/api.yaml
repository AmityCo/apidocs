deleteUser:
  summary: Delete user
  security:
    - BearerAuth: [] 
  tags:
    - User
  parameters:
    - in: path
      name: userId
      required: true
      schema:
        type: string
        minimum: 1
        maximum: 50
      description: User public id
  consumes:
    - application/json
  description: |
    Delete user from system. User display name will be replaced with "Deleted user".

    Content that is created from the user will be able to be wiped depend on the options.

    **This API allow only admin user to call**
  requestBody:
    content:
      application/json:
        schema:            
          type: object
          properties:
            deleteAll:
              type: boolean
              description: true - it will hard delete this user created channels, messages, comments, posts, polls, reactions after user is deleted.
              default: false
            markMessageDeleted:
              type: boolean
              description: true - it will hard delete this user messages after user is deleted.
              default: false
            hardDeletePost:
              type: boolean
              description: true - it will hard delete this user posts after user is deleted.
              default: false
            hardDeleteComment:
              type: boolean
              description: true - it will hard delete this user comments after user is deleted.
              default: false
  responses:
    "200":
      $ref: "./response.yaml#/UserDeleteResponse"
    "404":
      $ref: "../../global/error.yaml#/UserNotFoundError"
    "400": 
      $ref: "../../global/error.yaml#/UserIsAlreadyDeletedError"
    "500":
      $ref: "../../global/error.yaml#/UnexpectedError"

flagUser:
  summary: Report user
  security:
    - BearerAuth: [] 
  tags:
    - User
  parameters:
    - in: path
      name: userId
      required: true
      schema:
        type: string
        minimum: 1
        maximum: 50
      description: User public id
  consumes:
    - application/json
  description: |
    Report user by user id.
  responses:
    "200":
      $ref: "./response.yaml#/FlagUserResponse"
    "404":
      $ref: "../../global/error.yaml#/UserNotFoundError"
    "500":
      $ref: "../../global/error.yaml#/UnexpectedError"

unflagUser:
  summary: Unreported user
  security:
    - BearerAuth: [] 
  tags:
    - User
  parameters:
    - in: path
      name: userId
      required: true
      schema:
        type: string
        minimum: 1
        maximum: 50
      description: User public id
  consumes:
    - application/json
  description: |
    Unreported user by user id.
  responses:
    "200":
      $ref: "./response.yaml#/UnflagUserResponse"
    "404":
      $ref: "../../global/error.yaml#/UserNotFoundError"
    "500":
      $ref: "../../global/error.yaml#/UnexpectedError"


UsersUserId:
  delete:
    summary: 'Delete user'
    security:
      - BearerAuth: []
    tags:
      - 'User'
    parameters:
      - in: 'path'
        name: 'userId'
        required: true
        schema:
          type: 'string'
          minimum: 1
          maximum: 50
        description: 'User public id'
    consumes:
      - 'application/json'
    description: "Delete user from system. User display name will be replaced with \"Deleted user\".\n\nContent that is created from the user will be able to be wiped depend on the options.\n\n**This API allow only admin user to call**\n"
    requestBody:
      content:
        application/json:
          schema:
            type: 'object'
            properties:
              deleteAll:
                type: 'boolean'
                description: 'true - it will hard delete this user created channels, messages, comments, posts, polls, reactions after user is deleted.'
                default: false
              markMessageDeleted:
                type: 'boolean'
                description: 'true - it will hard delete this user messages after user is deleted.'
                default: false
              hardDeletePost:
                type: 'boolean'
                description: 'true - it will hard delete this user posts after user is deleted.'
                default: false
              hardDeleteComment:
                type: 'boolean'
                description: 'true - it will hard delete this user comments after user is deleted.'
                default: false
    responses:
      '200':
        $ref: './response.yaml#/UserDeleteResponse'
      '400':
        $ref: '../../global/error.yaml#/UserIsAlreadyDeletedError'
      '404':
        $ref: '../../global/error.yaml#/UserNotFoundError'
      '500':
        $ref: '../../global/error.yaml#/UnexpectedError'


MeFlagsUserId:
  post:
    summary: 'Report user'
    security:
      - BearerAuth: []
    tags:
      - 'User'
    parameters:
      - in: 'path'
        name: 'userId'
        required: true
        schema:
          type: 'string'
          minimum: 1
          maximum: 50
        description: 'User public id'
    consumes:
      - 'application/json'
    description: "Report user by user id.\n"
    responses:
      '200':
        $ref: './response.yaml#/FlagUserResponse'
      '404':
        $ref: '../../global/error.yaml#/UserNotFoundError'
      '500':
        $ref: '../../global/error.yaml#/UnexpectedError'
  delete:
    summary: 'Unreported user'
    security:
      - BearerAuth: []
    tags:
      - 'User'
    parameters:
      - in: 'path'
        name: 'userId'
        required: true
        schema:
          type: 'string'
          minimum: 1
          maximum: 50
        description: 'User public id'
    consumes:
      - 'application/json'
    description: "Unreported user by user id.\n"
    responses:
      '200':
        $ref: './response.yaml#/UnflagUserResponse'
      '404':
        $ref: '../../global/error.yaml#/UserNotFoundError'
      '500':
        $ref: '../../global/error.yaml#/UnexpectedError'
