create:
  summary: create a post
  tags:
    - Post v4
  security:
    - SocketAuth: []
  description: >
    Create a post
  requestBody:
    description: |
      information of a post to be created.

      require text or at least 1 attachments

      ### Custom post
      When `dataType` is set `data` payload can be anything but it will not support normal data capability (ex. `text` data will not be created)
      and `data` payload size will be limit to `100kb`

      ### Image, File, Video post
      - Put `type` with file id in `attachments`
      - Image and File data can be picked from `fileId` in `data` object in child post
      - Video fileId for each resolution will be in `videoFileId` in `data` object in child post

      ### Live streaming post
      - When put `dataType` as `liveStream` and `streamId` in `data`, post will be created as live streaming post
      - `attachments` will be ignored
      - Video streaming info will be in `videoStreamings` object in response

    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              type: object
              properties:
                text:
                  type: string
                  description: data for text in post parent
                  example: example text
                streamId:
                  type: string
                  description: video streaming id for create live streaming post
                  example: 81559bcc3a5bb3b6bbd69a83b89d337e
                pollId:
                  type: string
                  description: poll id for create poll post
                  example: 53a9fd8b5aaa1af6c5a1bbd245ce4a9b1627373735551
            attachments:
              type: array
              items:
                type: object
                description: attachment info
                properties:
                  fileId:
                    type: string
                    example: 57b916d38eaf8010caddfb7759a2d06c
                    description: file id for attachments
                  type:
                    type: string
                    description: attachment type
                    enum:
                      - image
                      - file
                      - video
            dataType:
              type: string
              example: upstra.customtype
              description: Must be in namespace like or system defined format (ex. "upstra.customtype", "com.eko.birthday", "liveStream")
            targetType:
              type: string
              enum:
                - user
                - community
                - content
              default: user
              description: where to create post to
            targetId:
              type: string
              example: public_user_id
              description: Resource public id depends on target type (ex. target type is community, target id will be community public id)
            metadata:
              type: object
              example: { "anything": "you want" }
            postId:
              type: string
              example: postidiwant
              description: for specify public post id on post creation
            tags:
              type: array
              minItems: 0
              maxItems: 5
              items:
                type: string
                max: 24
                description: tags
            mentionees:
              type: array
              description: The object of the mentions type and user who get a notification from the post.
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: user
                    description: >
                      type:
                      * `user` - need to specific userIds and notification mentions individual user
                    enum:
                      - user
                  userIds:
                    type: array
                    example: ["userId1", "userId2"]
                    description: Array of UserId. if the mention type is a channel, doesn't send userIds
                    items:
                      type: string
          required:
            - data
  responses:
    "200000":
      $ref: "../../v4/post/response.yaml#/PostSocketResponse"
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

delete:
  summary: delete a post
  tags:
    - Post v4
  security:
    - SocketAuth: []
  description: >
    Delete a post
  requestBody:
    description: >
      information of a post to be deleted.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            postId:
              type: string
            permanent:
              type: boolean
              default: false
              description: If true data will be deleted from database
          required:
            - postId
  responses:
    "200000":
      description: post information
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
              data:
                type: object
                properties:
                  success:
                    type: boolean
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

update:
  summary: update a post
  tags:
    - Post v4
  security:
    - SocketAuth: []
  description: >
    Update a post (can't update images and files yet)
  requestBody:
    description: >
      information of a post to be updated.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            postId:
              type: string
            text:
              type: string
              deprecated: true
            data:
              type: object
              properties:
                text:
                  type: string
                  max: 50000
                  description: For updating text in the post
                fileId:
                  type: string
                  max: 100
                  description: Put file id to update file,image inside file, image post (video is not supported yet)
                streamId:
                  type: string
                  max: 100
                  description: Put stream id to update live streaming post with new streaming
                thumbnailFileId:
                  type: string
                  max: 100
                  description: Put image file id to update video file thumbnail in video post
            metadata:
              type: object
            tags:
              type: array
              minItems: 0
              maxItems: 5
              items:
                type: string
                max: 24
                description: tags
            mentionees:
              type: array
              description: The object of the mentions type and user who get a notification from the post.
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: user
                    description: >
                      type:
                      * `user` - need to specific userIds and notification mentions individual user
                    enum:
                      - user
                  userIds:
                    type: array
                    example: ["userId1", "userId2"]
                    description: Array of UserId. if the mention type is a channel, doesn't send userIds
                    items:
                      type: string
          required:
            - postId
  responses:
    "200000":
      $ref: "./response.yaml#/PostSocketResponse"
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

query:
  summary: query posts
  tags:
    - Post v4
  securityDefinition:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  description: >
    Query posts
  parameters:
    - name: Authorization
      in: header
      value: Bearer {{accessToken}}
      required: true
      schema:
        type: string
    - name: Content-Type
      in: header
      value: application/x-www-form-urlencoded
      required: true
      schema:
        type: string
  consumes:
    - application/x-www-form-urlencoded
  requestBody:
    description: >
      condition for querying
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            targetId:
              type: string
              maxLength: 900
            targetType:
              type: string
              enum:
                - community
                - user
                - content
            sortBy:
              type: string
              enum:
                - lastCreated
                - firstCreated
                - lastUpdated
                - firstUpdated
              default: lastCreated
            dataType:
              type: string
              example: upstra.customtype
              description: must be in namespace like format (ex. "upstra.customtype", "com.eko.birthday")
              deprecated: true
            hasFlag:
              type: boolean
              default: null
              description: >
                  hasFlag:
                    * `null(default)` - Show all posts.
                    * `true` - Show only flagged post(or children) or has flagged comment.
                    * `false` - Show only no flagged post(and children) and has no flagged comment.
            isDeleted:
              type: boolean
              default: null
            options:
              type: object
              properties:
                before:
                  type: string
                  maxLength: 24
                after:
                  type: string
                  maxLength: 24
                limit:
                  type: integer
                  minimum: 1
                  maximum: 100
                  default: 10
                token:
                  type: string
                  maxLength: 1000
            feedType:
              type: string
              enum:
                - published
                - reviewing
              default: published
            dataTypes:
              type: array
              minItems: 1
              maxItems: 10
              items:
                oneOf:
                  - type: string
                    maxLength: 100
                    enum:
                      - video
                      - image
                      - file
                      - liveStream
                    description: post data type to filter
                  - type: string
                    example: upstra.customtype
                    description: custom post type - must be in namespace like format (ex. "upstra.customtype", "com.eko.birthday")
            matchingOnlyParentPost:
              type: boolean
              default: true
              description: When `true` will filter only parent post
            tags:
              type: array
              minItems: 0
              maxItems: 5
              items:
                type: string
                max: 24
                description: tags
          required:
            - targetType
  responses:
    "200000":
      $ref: "./response.yaml#/PostPaginationSocketResponse"
    "400000":
      $ref: "../../global/error.yaml#/BadRequestError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"