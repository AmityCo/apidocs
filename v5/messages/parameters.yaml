parameters:
    Message_messageIdPath:
      name: messageId
      in: path
      required: true
      description: ID of a message
      schema:
        $ref: './schema/message.yaml#Message_messageId'
    Message_messageIds:
      name: messageIds
      in: query
      required: true
      description: List of message ID that needs to find (max=10) [messageIds[]=message1&messageIds[]=message2]
      schema:
        $ref: './schema/message.yaml#Message_messageIds'
    Message_creatorIdPath:
      name: creatorId
      in: path
      required: true
      description: creator ID of message that needs to be find
      schema:
        $ref: './schema/message.yaml#Message_creatorId'
    Message_channelId:
      name: channelId
      in: query
      required: true
      description: channel ID of message that needs to be find (max length=30)
      schema:
        $ref: './schema/message.yaml#Message_messageFeedId'
    Message_dataType:
      name: dataType
      in: query
      description: data type of message (max length=20)
      schema:
        $ref: './schema/message.yaml#Message_dataType'
    Message_hasFlags:
      name: hasFlags
      in: query
      description: flag to filter only flagged message
      schema:
        $ref: './schema/message.yaml#Message_hasFlags'
    Message_isDeleted:
      name: isDeleted
      in: query
      description: deleted flag of message that needs to be find
      schema:
        $ref: './schema/message.yaml#Generic_isDeleted'
    Message_messageFeedId:
      name: messageFeedId
      in: query
      required: true
      description: message feed ID of a message (max length=30)
      schema:
        $ref: './schema/message.yaml#Message_messageFeedId'
    Message_pageOptions:
      name: options
      in: query
      description: |
        Pagination options
        
        **after**: string(30) : return documents after this message id
        
        **before**: string(30) : return documents before this message id
        
        **limit**: number(0, 100) default=10
        
        **sortBy**: segmentAsc | segmentDesc
        
        **token**: string(100) : This token will be generated by server using encryption of after, before, limit, sortBy. It would be returned in response payload (paging.next, paging.previous). The caller can send only token for getting data from previous or next page easily.
      schema:
        $ref: './schema/message.yaml#Message_pageOptions'
    Message_parentId:
      name: parentId
      in: query
      description: parent ID of a message (max length=50)
      schema:
        $ref: './schema/message.yaml#Message_parentId'
    Generic_excludeTags:
      name: excludeTags
      in: query
      description: tags for filtering out (max=10)
      schema:
        $ref: './schema/message.yaml#Generic_tags'
    Generic_includeTags:
      name: includeTags
      in: query
      description: tags for filtering (max=10)
      schema:
        $ref: './schema/message.yaml#Generic_tags'
    Generic_permanent:
      name: permanent
      in: query
      description: flag to confirm permanent deletion
      schema:
        $ref: './schema/message.yaml#Generic_permanent'