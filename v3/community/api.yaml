get:
  summary: query communities.
  tags:
    - Community
  security:
    - BearerAuth: [] 
  description: >
    query communities.
  parameters:
    - name: keyword
      in: query
      schema:
        type: string
        minLength: 0
        maxLength: 100
    - name: tags
      in: query
      collectionFormat: multi
      schema:
        type: array
        maxItems: 10
        items:
          type: string
          minLength: 1
          maxLength: 1000 
    - name: filter
      in: query
      schema:
        type: string
        enum:
          - all
          - member
          - notMember
        default: all
    - name: categoryId
      in: query
      schema:
        type: string
        minLength: 50
        maxLength: 50
    - name: sortBy
      in: query
      schema:
        type: string
        enum:
          - firstCreated
          - lastCreated
          - displayName
        default: lastCreated
    - name: isDeleted
      in: query
      schema:
        type: boolean
        default: null
      description: >
                isDeleted:
                  * `null(default)` - Show both community is actived and community is inactived.
                  * `true` - Show community is inactived only.
                  * `false` - Show community is actived only.
    - name: hasFlag
      in: query
      schema:
        type: boolean
        default: null
      description: >
                hasFlag:
                    * `null(default)` - Show all communities.
                    * `true` - Show only community has flagged post(or children post) or has flagged comment.
                    * `false` - Show only community has no flagged post(and children post) and has no flagged comment.
    - name: options
      in: query
      style: deepObject
      schema:
        type: object
        properties:
          limit:
            type: integer
            minimum: 1
            maximum: 100
          token:
            type: string
            maxLength: 1000                    
  consumes:
    - application/json
  responses:
    "200000":
      $ref: "./response.yaml#/CommunityPaginationApiResponse"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

create:
  summary: create a community.
  tags:
    - Community
  security:
    - BearerAuth: []
  consumes:
    - application/json
  requestBody:
    description: >
      information of a community to be created.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            displayName:
              type: string
              minLength: 1
              maxLength: 1000
            isPublic:
              type: boolean
              default: true
            isOfficial:
              type: boolean
              default: false
            onlyAdminCanPost:
              type: boolean
              default: false
            description:
              type: string
              minLength: 1
              maxLength: 5000
            tags:
              type: array
              minItems: 1
              maxItems: 10
              items:
                type: string
                minLength: 1
                maxLength: 1000
            metadata:
              type: object
            avatarFileId:
              type: string
              maxLength: 50
              minLength: 1
            userIds:
              type: array
              minItems: 1
              maxItems: 1000
              items:
                type: string
                minLength: 1
                maxLength: 900
            categoryIds:
              type: array
              minItems: 1
              maxItems: 10
              items:
                type: string
                minLength: 1
                maxLength: 50
            isUniqueDisplayName:
              type: boolean
              default: false
            needApprovalOnPostCreation:
              type: boolean
              default: false
          required:
            - displayName
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400315":
      $ref: "../../global/error.yaml#/DuplicateEntryError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

getOne:
  summary: get a community by ID.
  tags:
    - Community
  security:
    - BearerAuth: [] 
  description: >
    Get a community by ID
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
    - name: type
      in: query
      schema:
        type: string
        enum:
          - public
          - internal
        default: public
      description: type of communityId
  consumes:
    - application/json
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

update:
  summary: update a community.
  tags:
    - Community
  security:
    - BearerAuth: [] 
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  consumes:
    - application/json
  requestBody:
    description: >
      community information.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            communityId:
              type: string
              minLength: 1
              maxLength: 900
            displayName:
              type: string
              minLength: 1
              maxLength: 1000
            isPublic:
              type: boolean
            isOfficial:
              type: boolean
            onlyAdminCanPost:
              type: boolean
            description:
              type: string
              minLength: 0
              maxLength: 5000
            tags:
              type: array
              minItems: 1
              maxItems: 10
              items:
                type: string
                minLength: 1
                maxLength: 1000
            metadata:
              type: object
            avatarFileId:
              type: string
              maxLength: 50
              minLength: 1
            categoryIds:
              type: array
              minItems: 1
              maxItems: 10
              items:
                type: string
                minLength: 1
                maxLength: 50
            isUniqueDisplayName:
              type: boolean
              default: false
            needApprovalOnPostCreation:
              type: boolean
              default: false
          required:
            - communityId
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400315":
      $ref: "../../global/error.yaml#/DuplicateEntryError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

delete:
  summary: delete a community.
  tags:
    - Community
  security:
    - BearerAuth: [] 
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  responses:
    "200000":
      $ref: "../../global/response.yaml#/DeleteApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

join:
  summary: Join a community
  tags:
    - Community
  security:
    - BearerAuth: []
  description: >
    Join community by ID
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

leave:
  summary: Leave a community.
  tags:
    - Community
  security:
    - BearerAuth: []
  description: >
    Leave community by ID
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400100":
      $ref: "../../global/error.yaml#/UnAuthorizedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

getUsers:
  summary: query community users
  tags:
    - Community
  security:
    - BearerAuth: [] 
  description: >
    query community users.
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
    - name: memberships
      in: query
      collectionFormat: multi
      schema:
        type: array
        description: Membership type to filter (If not filter will return member users)
        minItems: 1
        maxItems: 2
        items:
          type: string
          enum:
            - banned
            - member
    - name: roles
      in: query
      collectionFormat: multi
      description: Role to filter
      schema:
        type: array
        minItems: 1
        maxItems: 20
        items:
          type: string
          minLength: 1
          maxLength: 100
    - name: sortBy
      in: query
      schema:
        type: string
        enum:
          - firstCreated
          - lastCreated
        default: lastCreated
    - name: options
      in: query
      style: deepObject
      schema:
        type: object
        properties:
          limit:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          token:
            type: string
            minLength: 1
            maxLength: 1000
    - name: search
      description: Input text for searching display name and user id 
      in: query
      schema:
        type: string
        maxLength: 10000   
    - name: type
      in: query
      schema:
        type: string
        enum:
          - public
          - internal
        default: public
      description: type of communityId         
  consumes:
    - application/json
  responses:
    "200000":
      $ref: "./response.yaml#/CommunityPaginationApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

ban:
  summary: ban community users
  tags:
    - Community
  security:
    - BearerAuth: []
  description: >
    ban community users.
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  consumes:
    - application/json
  requestBody:
    description: >
      condition for querying
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 900
          required:
            - userIds
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400306":
      $ref: "../../global/error.yaml#/ExemptFromBanError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

unban:
  summary: unban community users
  tags:
    - Community
  security:
    - BearerAuth: []
  description: >
    unban community users.
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  consumes:
    - application/json
  requestBody:
    description: >
      condition for querying
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 900
          required:
            - userIds
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400316":
      $ref: "../../global/error.yaml#/UserIsUnbannedError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

getList:
  summary: get list of community
  tags:
    - Community
  security:
    - BearerAuth: [] 
  description: >
    Get list of community
  parameters:
    - name: communityIds
      in: query
      required: true
      collectionFormat: multi
      schema:
        type: array
        minLength: 1
        maxItems: 100
        items:
          type: string
          maxLength: 50
    - name: type
      in: query
      schema:
        type: string
        enum:
          - public
          - internal
        default: public
      description: type of communityId
  consumes:
    - application/json
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

addUsers:
  summary: add community users
  tags:
    - Community
  security:
    - BearerAuth: [] 
  description: >
    add community users
  parameters:
    - in: path
      name: communityId
      required: true
      schema:
        type: string
      description: Community public id
    
  consumes:
    - application/json
  requestBody:
    description: >
      information of a community.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 50
          required:
            - userIds
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

removeUsers:
  summary: remove community users
  tags:
    - Community
  security:
    - BearerAuth: [] 
  description: >
    remove community users
  parameters:
    - in: path
      name: communityId
      required: true
      schema:
        type: string
        minimum: 1
  consumes:
    - application/json
  requestBody:
    description: >
      information of a community.
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 50
          required:
            - userIds
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/PermissionDenidedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

getRecommendedList:
  summary: get list of recommended community
  tags:
    - Community
  security:
    - BearerAuth: []
  description: >
    Get list of recommended community
  parameters:
    - name: Content-Type
      in: header
      value: application/json
      required: true
      schema:
        type: string
    - name: options
      in: query
      style: deepObject
      schema:
        type: object
        properties:
          limit:
            type: integer
            minimum: 1
            maximum: 100
            default: 5
  consumes:
    - application/json
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

getTopTrendingList:
  summary: get list of top trend community
  tags:
    - Community
  security:
    - BearerAuth: []
  description: >
    Get list of top trend community
  parameters:
    - name: Content-Type
      in: header
      value: application/json
      required: true
      schema:
        type: string
    - name: options
      in: query
      style: deepObject
      schema:
        type: object
        properties:
          limit:
            type: integer
            minimum: 1
            maximum: 100
            default: 5
  consumes:
    - application/json
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

addRole:
  summary: Add role to community users
  tags:
    - Community
  securityDefinition:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  description: >
    Add role to community users.
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  consumes:
    - application/json
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            role:
              type: string
              minLength: 1
              maxLength: 900
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 50
          required:
            - userIds
            - role
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/GenericPermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

removeRole:
  summary: Remove role from community users
  tags:
    - Community
  security:
    - BearerAuth: []
  description: >
    Remove role from community users.
  parameters:
    - name: communityId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 900
  consumes:
    - application/json
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            role:
              type: string
              minLength: 1
              maxLength: 900
            userIds:
              type: array
              minItems: 1
              maxItems: 100
              items:
                type: string
                minLength: 1
                maxLength: 50
          required:
            - userIds
            - role
  responses:
    "200000":
      $ref: "./response.yaml#/CommunitiesApiResponse"
    "400301":
      $ref: "../../global/error.yaml#/GenericPermissionDenidedError"
    "400304":
      $ref: "../../global/error.yaml#/UserIsBannedError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "400400":
      $ref: "../../global/error.yaml#/NotFoundError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

getSelfPermission:
  summary: Get self permission in community
  tags:
    - Community
  security:
    - BearerAuth: [] 
  description: >
    query comments.
  parameters:
    - in: path
      name: communityId
      required: true
      schema:
        type: string
        minimum: 1
      description: Community public id
  consumes:
    - application/json
  responses:
    "200000":
      description: Communities permission information for this user
      content:
        application/json:
          schema:
            type: object
            properties:
              isCreator:
                type: boolean
                example: false
                description: Is this person create this community? 
              permissions:
                type: array
                items:
                  $ref: "../../schema/role.yaml#/PermissionEnum"
    "400300":
      $ref: "../../global/error.yaml#/ForbiddenError"
    "400311":
      $ref: "../../global/error.yaml#/RateLimitError"
    "500000":
      $ref: "../../global/error.yaml#/UnexpectedError"

